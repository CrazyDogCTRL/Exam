//Билет 3
#include <iostream>

bool BiSearch(int *array, int elem, size_t size) { // O(log N)
  size_t l = 0;
  size_t r = size - 1;
  while (l <= r) {
    size_t m = (l + r) / 2;
    if (array[m] > elem) {
      r = m - 1;
    } else if (array[m] < elem) {
      l = m + 1;
    } else {
      return true;
    }
  }
  return false;
}

float BinSearchSqrt(int number, int precision) {
  if (number <= 0) {
    return 0.0;
  }
  int start = 0;
  int end = number;
  int mid;
  float ans;
  while (start <= end) {
    mid = (start + end) / 2;
    if (mid * mid == number) {
      return mid;
    }
    if (mid * mid < number) {
      start = mid + 1;
      ans = mid;
    } else {
      end = mid - 1;
    }
  }
  float increment = 0.1;
  for (int i = 0; i < precision; i++) {
    while (ans * ans <= number) {
      ans += increment;
    }
    ans -= increment;
    increment /= 10.0;
  }
  return ans;
}

int main() {
  int n;
  int array[5] {1,2,3,4,5};
  std::cin >> n;
  if (BiSearch(array, n, 5)) {
    std::cout << "FOUND";
  } else {
    std::cout << "NOT FOUND";
  }
}
